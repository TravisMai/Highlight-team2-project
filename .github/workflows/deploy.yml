name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Deployment for Backend Instance
      - name: Set up SSH for Backend and Socket
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_BACKEND }}
      - name: SSH to EC2 machine
        env:
          SSH_PRIVATE_KEY_BACKEND: ${{ secrets.SSH_PRIVATE_KEY_BACKEND }}
          SSH_USERNAME: ubuntu
          SSH_HOST: ec2-13-215-153-89.ap-southeast-1.compute.amazonaws.com
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY_BACKEND" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
          ssh -o "StrictHostKeyChecking=no" $SSH_USERNAME@$SSH_HOST "echo 'Connected via SSH'"
          ssh $SSH_USERNAME@$SSH_HOST "sudo apt-get update"
      - name: Remove Backend Source Code in EC2
        env:
          SSH_USERNAME: ubuntu
          SSH_HOST: ec2-13-215-153-89.ap-southeast-1.compute.amazonaws.com
        run: |
          ssh $SSH_USERNAME@$SSH_HOST "sudo rm -rf /home/ubuntu/backend"
      - name: Copy Backend Source Code to EC2
        env:
          SSH_USERNAME: ubuntu
          SSH_HOST: ec2-13-215-153-89.ap-southeast-1.compute.amazonaws.com
        run: |
          scp -r backend $SSH_USERNAME@$SSH_HOST:/home/ubuntu/
      - name: Copy .env files
        env:
          SSH_USERNAME: ubuntu
          SSH_HOST: ec2-13-215-153-89.ap-southeast-1.compute.amazonaws.com
        run: |
          echo "${{ secrets.BACKEND_ENV }}" > .production.env
          echo "${{ secrets.BACKEND_ENV }}" > .docker.env
          scp .docker.env $SSH_USERNAME@$SSH_HOST:/home/ubuntu/backend
          scp .production.env $SSH_USERNAME@$SSH_HOST:/home/ubuntu/backend
      - name: Deploy Backend, Socket, Redis, Database
        env:
          SSH_USERNAME: ubuntu
          SSH_HOST: ec2-13-215-153-89.ap-southeast-1.compute.amazonaws.com
        run: |
          ssh $SSH_USERNAME@$SSH_HOST 'sudo sh /home/ubuntu/backend/script/remove-docker-resources.sh'
          ssh $SSH_USERNAME@$SSH_HOST 'cd /home/ubuntu/backend && sudo docker compose up --detach'

      # Deployment for Frontend Instance
      - name: Set up SSH for Frontend
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_FRONTEND }}
      - name: SSH to EC2 machine
        env:
          SSH_PRIVATE_KEY_FRONTEND: ${{ secrets.SSH_PRIVATE_KEY_FRONTEND }}
          SSH_USERNAME: ubuntu
          SSH_HOST: ec2-52-221-195-133.ap-southeast-1.compute.amazonaws.com
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY_FRONTEND" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
          ssh -o "StrictHostKeyChecking=no" $SSH_USERNAME@$SSH_HOST "echo 'Connected via SSH'"
          ssh $SSH_USERNAME@$SSH_HOST "sudo apt-get update"
      - name: Remove Frontend Source Code in EC2
        env:
          SSH_USERNAME: ubuntu
          SSH_HOST: ec2-52-221-195-133.ap-southeast-1.compute.amazonaws.com
        run: |
          ssh $SSH_USERNAME@$SSH_HOST "sudo rm -rf /home/ubuntu/frontend"
      - name: Copy Frontend Source Code to EC2
        env:
          SSH_USERNAME: ubuntu
          SSH_HOST: ec2-52-221-195-133.ap-southeast-1.compute.amazonaws.com
        run: |
          scp -r frontend $SSH_USERNAME@$SSH_HOST:/home/ubuntu/
      - name: Copy .env files
        env:
          SSH_USERNAME: ubuntu
          SSH_HOST: ec2-52-221-195-133.ap-southeast-1.compute.amazonaws.com
        run: |
          echo "${{ secrets.FRONTEND_ENV }}" > .env.production
          scp .env.production $SSH_USERNAME@$SSH_HOST:/home/ubuntu/frontend
      - name: Deploy Frontend
        env:
          SSH_USERNAME: ubuntu
          SSH_HOST: ec2-52-221-195-133.ap-southeast-1.compute.amazonaws.com
        run: |
          ssh $SSH_USERNAME@$SSH_HOST 'sudo sh /home/ubuntu/frontend/script/remove-docker-resources.sh'
          ssh $SSH_USERNAME@$SSH_HOST 'cd /home/ubuntu/frontend && sudo docker compose up --detach'
